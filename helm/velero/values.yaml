---
velero:
  namespace:
    labels: {}

  # Backup schedules to create.
  schedules:
    nginx-app-backup:
      disabled: false
      schedule: "*/2 * * * *"
      useOwnerReferencesInBackup: false
      template:
        ttl: "720h"
        storageLocation: nginx
        volumeSnapshotLocation: nginx
        # volumeSnapshotLocation: test-snapshot
        snapshotVolumes: true
        includedNamespaces:
        - nginx
        metadata:
          annotations:
                velero.io/csi-volumesnapshot-class_csi.scaleway.com: "scw-snapshot" 
          labels:
             app: "nginx-app"


  
  # Backup storage locations to create
  configuration:
    uploaderType: kopia  
    backupStorageLocation:
      - name:  nginx
        provider: aws
        bucket: arcons-backup
        prefix:  nginx
        validationFrequency:
        accessMode: ReadWrite
        default: true
        config: {
          region: fr-par,
          s3Url: https://s3.fr-par.scw.cloud
        }

    volumeSnapshotLocation:
      - name: nginx
        provider: aws
        config:
            region: fr-par

    defaultBackupTTL: "720h"  # Set this to a duration greater than your schedule interval, e.g., 720 hours.
    backupSyncPeriod: "720h"
    garbageCollectionFrequency: "720h"
    logLevel: "error"
    defaultSnapshotMoveData: true

 

  initContainers:
    - name: velero-plugin-for-csi 
      image: velero/velero-plugin-for-csi:v0.6.0
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

    - name: velero-plugin-for-aws
      image: velero/velero-plugin-for-aws:v1.8.2
      imagePullPolicy: IfNotPresent
      volumeMounts:
        - mountPath: /target
          name: plugins

  snapshotsEnabled: true

  credentials:
    useSecret: true
    existingSecret: iam-credentials-scaleway
    extraEnvVars: {}
    extraSecretRef: ""
  

  features: EnableCSI 
  # volumeSnapshotLocation:
  # - name: test-snapshot
  #   provider: aws
  #   config: 
  #     region: fr-par
  #    apiTimeout:
  #    resourceGroup:
  #    The ID of the subscription where volume snapshots should be stored, if different from the clusterâ€™s subscription. If specified, also requires `configuration.volumeSnapshotLocation.config.resourceGroup`to be set. (Azure only)
  #    subscriptionId:
  #    incremental:
  #    snapshotLocation:
  #    project: