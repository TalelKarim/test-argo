vault:
  # Vault Helm Chart Value Overrides
  global:
    enabled: true
    tlsDisable: false
  namespace: "vault"

  injector:
    enabled: true
    resources:
      requests:
        memory: 256Mi
        cpu: 10m
      limits:
        memory: 256Mi

  server:
    # These Resource Limits are in line with node requirements in the
    # Vault Reference Architecture for a Small Cluster
    resources:
      requests:
        memory: 100Mi
        cpu: 19m
      limits:
        memory: 100Mi
        cpu: 19m

    ## Configure ingress to expose Vault service externally
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-prod
        kubernetes.io/tls-acme: "true"
        nginx.ingress.kubernetes.io/backend-protocol: HTTPS
        nginx.ingress.kubernetes.io/ssl-passthrough: "true"
      hosts:
        ## Change the host to your domain
        - host: vault.infra.arcons.io
          paths: []
      tls:
        - secretName: vault-ingress-tls
          hosts:
            - vault.infra.arcons.io
    # For HA configuration and because we need to manually init the vault,
    # we need to define custom readiness/liveness Probe settings
    readinessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true&sealedcode=204&uninitcode=204"
    livenessProbe:
      enabled: true
      path: "/v1/sys/health?standbyok=true"
      initialDelaySeconds: 60

    # extraEnvironmentVars is a list of extra environment variables to set with the stateful set. These could be
    # used to include variables required for auto-unseal.
    extraEnvironmentVars:
      VAULT_CACERT: /vault/userconfig/vault-ha-tls/vault.ca
      VAULT_TLSCERT: /vault/userconfig/vault-ha-tls/vault.crt
      VAULT_TLSKEY: /vault/userconfig/vault-ha-tls/vault.key

    # extraVolumes is a list of extra volumes to mount. These will be exposed
    # to Vault in the path `/vault/userconfig/<name>/`.
    volumes:
      - name: userconfig-vault-ha-tls
        secret:
         defaultMode: 420
         secretName: vault-ha-tls
    volumeMounts:
      - mountPath: /vault/userconfig/vault-ha-tls
        name: userconfig-vault-ha-tls
        readOnly: true

    # This configures the Vault Statefulset to create a PVC for audit logs.
    # See https://www.vaultproject.io/docs/audit/index.html to know more
    auditStorage:
      enabled: true

    standalone:
      enabled: false

    # Run Vault in "HA" mode.
    ha:
      enabled: true
      replicas: 1
      raft:
        enabled: true
        setNodeId: true

        config: |
          ui = true
          listener "tcp" {
            address = "[::]:8200"
            cluster_address = "[::]:8201"
            tls_cert_file = "/vault/userconfig/vault-ha-tls/vault.crt"
            tls_key_file = "/vault/userconfig/vault-ha-tls/vault.key"
            tls_ca_cert_file = "/vault/userconfig/vault-ha-tls/vault.ca"
          }

          storage "postgresql" {
            connection_url= "postgres://hashicorp-vault:%29h%26kSEX%29~%3ASp.%2Cs%5DBR1%23@172.16.8.13:5432/hashicorp-vault?sslmode=disable"
            table="vault_kv_store"
            ha_enabled=true
            ha_table="vault_ha_locks"
          }

          # storage "raft" {
          #   path = "/vault/data"
          #     retry_join {
          #     leader_api_addr = "https://vault-0.vault-internal:8200"
          #     leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #     leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #     leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          #   }
          #   retry_join {
          #     leader_api_addr = "https://vault-1.vault-internal:8200"
          #     leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #     leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #     leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          #   }
          #   retry_join {
          #     leader_api_addr = "https://vault-2.vault-internal:8200"
          #     leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #     leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #     leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          #   }
          #   retry_join {
          #       leader_api_addr = "https://vault-3.vault-internal:8200"
          #       leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #       leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #       leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          #   }
          #   retry_join {
          #       leader_api_addr = "https://vault-4.vault-internal:8200"
          #       leader_ca_cert_file = "/vault/userconfig/tls-ca/ca.crt"
          #       leader_client_cert_file = "/vault/userconfig/tls-server/server.crt"
          #       leader_client_key_file = "/vault/userconfig/tls-server/server.key"
          #   }

          #   autopilot {
          #     cleanup_dead_servers = "true"
          #     last_contact_threshold = "200ms"
          #     last_contact_failure_threshold = "10m"
          #     max_trailing_logs = 250000
          #     min_quorum = 5
          #     server_stabilization_time = "10s"
          #   }
          # }

          service_registration "kubernetes" {}

  # # Vault UI
  ui:
    enabled: false
    serviceType: "ClusterIP"

  #   # For Added Security, edit the below
  #   loadBalancerSourceRanges:
  #     - 80.15.56.155/32
  #   #   - < Your IP RANGE Ex. 10.0.0.0/16 >
  #   #   - < YOUR SINGLE IP Ex. 1.78.23.3/32 >

  serverTelemetry:
    serviceMonitor:
      enabled: true
    prometheusRules:
      enabled: true
      rules:
        - alert: vault-HighResponseTime
          annotations:
            message: The response time of Vault is over 500ms on average over the last 5 minutes.
          expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 500
          for: 5m
          labels:
            severity: warning
        - alert: vault-HighResponseTime
          annotations:
            message: The response time of Vault is over 1s on average over the last 5 minutes.
          expr: vault_core_handle_request{quantile="0.5", namespace="mynamespace"} > 1000
          for: 5m
          labels:
            severity: critical
